[
  {
    "id": "deep-dive-unveiling-kesi-android",
    "title": "Deep Dive: Unveiling Kesi Android",
    "description": "Welcome to the very first deep dive on this blog! Today, we're not just skimming the surface. We're jumping headfirst into the intricate world of Android development by dissecting a complete application",
    "img": "deep-dive-unveiling-kesi-android.jpg"
  },
  {
    "id": "kesi-android-multi-module",
    "title": "Kesi Android Multi-Module Architecture",
    "description": "In this post, I'll walk you through how Kesi Android divided its codebase into distinct modules to achieve a multi-module architecture. I'll explain the reasoning behind each module, and discuss how this approach helps us adhere to SOLID principles and significantly enhances project scalability.",
    "img": "kesi-android-multi-module.jpg"
  },
  {
    "id": "gradle-convention-plugins",
    "title": "Gradle convention plugins in Kesi Android",
    "description": "Ah, Gradle. The powerful, flexible, and sometimes overwhelmingly complex build system that powers our Android projects. If you've ever found yourself endlessly copying and pasting configurations across `build.gradle.kts` files, battling inconsistencies between modules, or dreading the thought of updating a common dependency everywhere, then this post is for you. This was certainly our reality at Kesi Android before we embraced a more structured approach.",
    "img": "gradle-convention-plugins.jpg"
  },
  {
    "id": "hilt",
    "title": "Unlock Simpler Android Development: A Deep Dive into Hilt",
    "description": "Hey Android Devs! \uD83D\uDC4B Are you tired of wrestling with boilerplate code for dependency injection? Do you dream of a cleaner, more maintainable, and testable codebase? If you nodded yes (even a little!), then you're in the right place. Today, we're diving deep into **Hilt**, Google's recommended dependency injection framework for Android, and how it can revolutionize your development workflow.",
    "img": "hilt.jpg"
  },
  {
    "id": "solid",
    "title": "SOLID in Jetpack Compose: Building Bulletproof Android UIs That Spark Joy",
    "description": "Hey Android devs! We're all riding the Jetpack Compose wave, and loving it, right? Declarative UIs, less boilerplate, and a more intuitive way to build beautiful apps.",
    "img": "solid.jpg"
  },
  {
    "id": "mvi",
    "title": "MVI with Compose & SharedFlow: The Secret Sauce for Modern Android UIs",
    "description": "Are you tired of wrestling with unpredictable UI states, complex ViewModel logic, and testing nightmares? In the ever-evolving landscape of Android development, building robust, scalable, and maintainable UIs is paramount.",
    "img": "mvi.jpg"
  },
  {
    "id": "kotlin-coroutines-compose",
    "title": "Mastering Kotlin Coroutines in Jetpack Compose",
    "description": "In the fast-paced world of Android development, building slick, responsive user interfaces is paramount. Users expect apps to be fluid, without janky animations or frozen screens, especially when data is being fetched or processed in the background.",
    "img": "kotlin-coroutines-compose.jpg"
  }
]
